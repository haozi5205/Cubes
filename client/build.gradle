plugins {
    id 'edu.sc.seis.launch4j' version '2.3.0'
}

apply plugin: 'edu.sc.seis.launch4j'

project.ext.mainClassName = "ethanjones.cubes.core.platform.desktop.ClientLauncher"
project.ext.assetsDir = new File("../assets")

task dist(dependsOn: classes, type: Jar) {
    from files(sourceSets.main.java.outputDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
    from files(project.assetsDir)

    exclude("META-INF/", "lua*.class")

    archiveName = 'client.jar'

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

task distWin(dependsOn: classes, type: Jar) {
    from files(sourceSets.main.java.outputDir)
    from files(sourceSets.main.output.resourcesDir)
    from { configurations.compile.collect { zipTree(it) } }
    from files(project.assetsDir)

    exclude("META-INF/", "lua*.class", "*.dylib", "*.so")

    archiveName = 'client-win.jar'

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

task run() {
    doLast { //DOES NOT BUILD AUTOMATICALLY
        file(project.buildDir.absolutePath + "/run").mkdirs()
        javaexec {
            main = "-jar"
            args dist.archivePath
            workingDir = project.buildDir.absolutePath + "/run"
            maxHeapSize = "2G"
            ignoreExitValue = true
        }
    }
}

run.mustRunAfter dist

launch4j {
    mainClassName = project.mainClassName
    jreMinVersion = '1.7.0'

    initialHeapSize = 2048
    maxHeapSize = 2048

    version = project.ext.buildProperties.version
    textVersion = project.ext.buildProperties.version

    jvmOptions  = ["-Dethanjones.cubes.launcher=\"Client exe\""]

    icon = project.getRootDir().absolutePath + "/assets/assets/icon.ico"
    copyConfigurable = project.tasks.distWin.outputs.files
    jar = new File(project.buildDir, "/libs/client-win.jar")
}
createExe.dependsOn distWin

publishing {
    publications {
        jar(MavenPublication) {
            artifact tasks.dist
            artifact(new File(project.getBuildDir(), '/launch4j/client.exe')) {
                classifier = 'win'
            }
            groupId 'ethanjones.cubes'
            artifactId 'client'
            version getMavenVersionString()
        }
    }
    repositories {
        maven {
            url getMavenRepo()
            credentials {
                username localProperties.MAVEN_REPO_USERNAME
                password localProperties.MAVEN_REPO_PASSWORD
            }
        }
    }
}

publish.dependsOn(['dist', 'createExe'])
publish.mustRunAfter(['dist', 'createExe'])